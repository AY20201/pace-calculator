{"ast":null,"code":"var _jsxFileName = \"/Users/alexyoung/Documents/React/pace-calculator/src/containers/Calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from '../styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst unitConversions = {\n  \"MILESMETERS\": 1609.34,\n  \"METERSMILES\": 0.000621371,\n  \"KMMETERS\": 1000,\n  \"METERSKM\": 0.001,\n  \"MILESKM\": 1.60934,\n  \"KMMILES\": 0.621371\n};\nexport default function Calculator() {\n  _s();\n  const [time, setTime] = useState({\n    \"hours\": 0,\n    \"minutes\": 0,\n    \"seconds\": 0\n  });\n  const [timeText, setTimeText] = useState(\"\");\n  const [distance, setDistance] = useState(0);\n  const [unit, setUnit] = useState(\"MILES\");\n  const [calculatedPaces, setCalculatedPaces] = useState({\n    \"400m\": \"-\",\n    \"800m\": \"-\",\n    \"1k\": \"-\",\n    \"1mi\": \"-\",\n    \"3k\": \"-\",\n    \"2mi\": \"-\",\n    \"5k\": \"-\"\n  });\n  function TableRow({\n    distance\n  }) {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: styles.tableElement,\n        children: distance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: styles.tableElement,\n        children: calculatedPaces[distance]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this);\n  }\n  function FormatTime(time) {\n    let numericalTime = time;\n    if (typeof numericalTime == \"object\") {\n      numericalTime = time.hours.toString().padStart(2, '0') + time.minutes.toString().padStart(2, '0') + Math.floor(time.seconds).toString().padStart(2, '0');\n      numericalTime = numericalTime.replace(/^0+(?=\\d)/, '');\n      if (numericalTime === \"0\") {\n        numericalTime = \"\";\n      }\n    }\n    //if(time.hours === 0 && time.minutes === 0 && time.se)\n    let formattedText = \"\";\n    for (var i = numericalTime.length - 1; i >= 0; i--) {\n      if (numericalTime[i] === \":\") {\n        continue;\n      }\n      if (i < numericalTime.length - 1 && (numericalTime.length - i) % 2 === 1) {\n        if (numericalTime.length - i < 6) {\n          formattedText = \":\" + formattedText;\n        }\n      }\n      formattedText = numericalTime[i] + formattedText;\n    }\n    return formattedText;\n  }\n  function GetPace(time, distanceTraveled, distancePace, unit, unitToConvert) {\n    let conversion = 1;\n    if (unit !== unitToConvert) {\n      conversion = unitConversions[unit + unitToConvert];\n    }\n    let timeInSeconds = time.hours * 3600 + time.minutes * 60 + time.seconds;\n    let secondsPer = timeInSeconds / (distanceTraveled * conversion);\n    secondsPer *= distancePace;\n    let hours = Math.floor(secondsPer / 3600);\n    let minutes = Math.floor((secondsPer - hours * 3600) / 60);\n    let seconds = secondsPer - hours * 3600 - minutes * 60;\n    console.log({\n      \"hours\": hours,\n      \"minutes\": minutes,\n      \"seconds\": seconds\n    });\n    return {\n      \"hours\": hours,\n      \"minutes\": minutes,\n      \"seconds\": seconds\n    };\n  }\n  function GetPaces(time, distanceTraveled, unit) {\n    if (time.hours === 0 && time.minutes === 0 && time.seconds === 0) {\n      return;\n    }\n    let paces = {\n      \"400m\": FormatTime(GetPace(time, distanceTraveled, 400, unit, \"METERS\")),\n      \"800m\": FormatTime(GetPace(time, distanceTraveled, 800, unit, \"METERS\")),\n      \"1k\": FormatTime(GetPace(time, distanceTraveled, 1, unit, \"KM\")),\n      \"1mi\": FormatTime(GetPace(time, distanceTraveled, 1, unit, \"MILES\")),\n      \"3k\": FormatTime(GetPace(time, distanceTraveled, 3, unit, \"KM\")),\n      \"2mi\": FormatTime(GetPace(time, distanceTraveled, 2, unit, \"MILES\")),\n      \"5k\": FormatTime(GetPace(time, distanceTraveled, 5, unit, \"KM\"))\n    };\n    setCalculatedPaces(paces);\n  }\n  const handleOnChange = e => {\n    let numericalString = e.target.value.replaceAll(\":\", \"\");\n    let timeString = numericalString.padStart(5, '0');\n    let seconds = Number(timeString.slice(-2));\n    let minutes = Number(timeString.slice(-4, -2));\n    let hours = Number(timeString.slice(0, -4));\n    setTime({\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds\n    });\n\n    //console.log({hours: hours, minutes: minutes, seconds: seconds});\n\n    //if(e.target.value.slice(-1) === \":\") { \n    //numericalString += \":\"\n    //}\n    let formattedText = FormatTime(numericalString);\n    setTimeText(formattedText);\n  };\n  const handleUnitSelect = e => {\n    setUnit(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: styles.timeField,\n        value: timeText,\n        onChange: e => handleOnChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: styles.inputField,\n        onChange: e => setDistance(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"units\",\n        id: \"units\",\n        onChange: e => handleUnitSelect(e),\n        className: styles.dropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"MILES\",\n          children: \"MI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"KM\",\n          children: \"KM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"METERS\",\n          children: \"M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.button,\n        onClick: () => GetPaces(time, distance, unit),\n        children: \"Get Pace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: styles.paceTable,\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: styles.tableElement,\n            children: \"Distance:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: styles.tableElement,\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          distance: \"400m\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          distance: \"800m\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          distance: \"1k\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          distance: \"1mi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          distance: \"3k\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          distance: \"2mi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n          distance: \"5k\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n_s(Calculator, \"Sz15ABjs8fmwctx0o1XE+XX5jWE=\");\n_c = Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","unitConversions","Calculator","_s","time","setTime","timeText","setTimeText","distance","setDistance","unit","setUnit","calculatedPaces","setCalculatedPaces","TableRow","children","className","tableElement","fileName","_jsxFileName","lineNumber","columnNumber","FormatTime","numericalTime","hours","toString","padStart","minutes","Math","floor","seconds","replace","formattedText","i","length","GetPace","distanceTraveled","distancePace","unitToConvert","conversion","timeInSeconds","secondsPer","console","log","GetPaces","paces","handleOnChange","e","numericalString","target","value","replaceAll","timeString","Number","slice","handleUnitSelect","container","timeField","onChange","type","inputField","name","id","dropdown","button","onClick","paceTable","_c","$RefreshReg$"],"sources":["/Users/alexyoung/Documents/React/pace-calculator/src/containers/Calculator.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from '../styles.module.css'\n\nconst unitConversions = {\n    \"MILESMETERS\": 1609.34,\n    \"METERSMILES\": 0.000621371,\n    \"KMMETERS\": 1000,\n    \"METERSKM\": 0.001,\n    \"MILESKM\": 1.60934,\n    \"KMMILES\": 0.621371\n}\n\nexport default function Calculator(){\n\n    const [time, setTime] = useState({\"hours\": 0, \"minutes\": 0, \"seconds\": 0});\n    const [timeText, setTimeText] = useState(\"\");\n    const [distance, setDistance] = useState(0);\n    const [unit, setUnit] = useState(\"MILES\");\n    const [calculatedPaces, setCalculatedPaces] = useState({\n        \"400m\": \"-\",\n        \"800m\": \"-\",\n        \"1k\": \"-\",\n        \"1mi\": \"-\",\n        \"3k\": \"-\",\n        \"2mi\": \"-\",\n        \"5k\": \"-\"\n    });\n\n    function TableRow({ distance }){\n        return(\n            <tr>\n                <td className={styles.tableElement}>{distance}</td>\n                <td className={styles.tableElement}>{calculatedPaces[distance]}</td>\n            </tr>\n        )\n    }\n\n    function FormatTime(time){\n        let numericalTime = time;\n        if(typeof numericalTime == \"object\"){\n            numericalTime = time.hours.toString().padStart(2, '0') + time.minutes.toString().padStart(2, '0') + Math.floor(time.seconds).toString().padStart(2, '0');\n            numericalTime = numericalTime.replace(/^0+(?=\\d)/, '');\n            if(numericalTime === \"0\") { numericalTime = \"\" }\n        }\n        //if(time.hours === 0 && time.minutes === 0 && time.se)\n        let formattedText = \"\";\n\n        for(var i = numericalTime.length - 1; i >= 0; i--){\n            if(numericalTime[i] === \":\") { continue; }\n            if(i < numericalTime.length - 1 && (numericalTime.length - i) % 2 === 1){\n                if(numericalTime.length - i < 6) {\n                    formattedText = \":\" + formattedText;\n                }\n            }\n            formattedText = numericalTime[i] + formattedText;\n        }\n\n        return formattedText;\n    }\n\n    function GetPace(time, distanceTraveled, distancePace, unit, unitToConvert){\n        let conversion = 1;\n        if(unit !== unitToConvert){\n            conversion = unitConversions[unit + unitToConvert];\n        }\n\n        let timeInSeconds = time.hours * 3600 + time.minutes * 60 + time.seconds;\n        let secondsPer = timeInSeconds / (distanceTraveled * conversion);\n        secondsPer *= distancePace;\n\n        let hours = Math.floor(secondsPer / 3600);\n        let minutes = Math.floor((secondsPer - hours * 3600) / 60);\n        let seconds = secondsPer - hours * 3600 - minutes * 60;\n\n        console.log({\"hours\": hours, \"minutes\": minutes, \"seconds\": seconds});\n\n        return {\"hours\": hours, \"minutes\": minutes, \"seconds\": seconds};\n    }\n\n    function GetPaces(time, distanceTraveled, unit){\n        if(time.hours === 0 && time.minutes === 0 && time.seconds === 0){\n            return;\n        }\n\n        let paces = {\n            \"400m\": FormatTime(GetPace(time, distanceTraveled, 400, unit, \"METERS\")),\n            \"800m\": FormatTime(GetPace(time, distanceTraveled, 800, unit, \"METERS\")),\n            \"1k\": FormatTime(GetPace(time, distanceTraveled, 1, unit, \"KM\")),\n            \"1mi\": FormatTime(GetPace(time, distanceTraveled, 1, unit, \"MILES\")),\n            \"3k\": FormatTime(GetPace(time, distanceTraveled, 3, unit, \"KM\")),\n            \"2mi\": FormatTime(GetPace(time, distanceTraveled, 2, unit, \"MILES\")),\n            \"5k\": FormatTime(GetPace(time, distanceTraveled, 5, unit, \"KM\"))\n        };\n\n        setCalculatedPaces(paces);\n    }\n\n    const handleOnChange = (e) => {\n        let numericalString = e.target.value.replaceAll(\":\", \"\");\n\n        let timeString = numericalString.padStart(5, '0')\n\n        let seconds = Number(timeString.slice(-2));\n        let minutes = Number(timeString.slice(-4, -2));\n        let hours = Number(timeString.slice(0, -4));\n        setTime({hours: hours, minutes: minutes, seconds: seconds});\n\n        //console.log({hours: hours, minutes: minutes, seconds: seconds});\n\n        //if(e.target.value.slice(-1) === \":\") { \n            //numericalString += \":\"\n        //}\n        let formattedText = FormatTime(numericalString);\n        \n        setTimeText(formattedText)\n    }\n\n    const handleUnitSelect = (e) => {\n        setUnit(e.target.value);\n    }\n\n    return(\n        <div>\n            <div className={styles.container}>\n                <input className={styles.timeField} value={timeText} onChange={e => handleOnChange(e)}></input>\n                <input type=\"number\" className={styles.inputField} onChange={e => setDistance(e.target.value)}></input>\n                <select name=\"units\" id=\"units\" onChange={(e) => handleUnitSelect(e)} className={styles.dropdown}>\n                    <option value=\"MILES\">MI</option> \n                    <option value=\"KM\">KM</option> \n                    <option value=\"METERS\">M</option> \n                </select>\n                <button className={styles.button} onClick={() => GetPaces(time, distance, unit)}>Get Pace</button>\n            </div>\n            <div className={styles.container}>\n                <table className={styles.paceTable}>\n                    <tr>\n                        <th className={styles.tableElement}>Distance:</th>\n                        <th className={styles.tableElement}>Time:</th>\n                    </tr>\n                    <TableRow distance={\"400m\"}/>\n                    <TableRow distance={\"800m\"}/>\n                    <TableRow distance={\"1k\"}/>\n                    <TableRow distance={\"1mi\"}/>\n                    <TableRow distance={\"3k\"}/>\n                    <TableRow distance={\"2mi\"}/>\n                    <TableRow distance={\"5k\"}/>\n                </table>\n            </div>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}