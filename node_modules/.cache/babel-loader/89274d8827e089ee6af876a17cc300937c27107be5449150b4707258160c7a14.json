{"ast":null,"code":"var _jsxFileName = \"/Users/alexyoung/Documents/React/pace-calculator/src/containers/Calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from '../styles.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Calculator() {\n  _s();\n  const [time, setTime] = useState({\n    \"hours\": 0,\n    \"minutes\": 0,\n    \"seconds\": 0\n  });\n  const [timeText, setTimeText] = useState(\"\");\n  const [distance, setDistance] = useState(0);\n  const [calculatedPace, setCalculatedPace] = useState({\n    \"hours\": 0,\n    \"minutes\": 0,\n    \"seconds\": 0\n  });\n  function GetPace(time, distanceTraveled, unit, unitToConvert) {\n    let timeInSeconds = time.hours * 3600 + time.minutes * 60 + time.seconds;\n    let secondsPer = timeInSeconds / distanceTraveled;\n    let hours = Math.floor(secondsPer / 3600);\n    let minutes = Math.floor((secondsPer - hours * 3600) / 60);\n    let seconds = secondsPer - hours * 3600 - minutes * 60;\n    return {\n      \"hours\": hours,\n      \"minutes\": minutes,\n      \"seconds\": seconds\n    };\n  }\n  const handleOnChange = e => {\n    let numericalString = e.target.value.replaceAll(\":\", \"\");\n    let timeString = numericalString.padStart(5, '0');\n    let seconds = Number(timeString.slice(-2));\n    let minutes = Number(timeString.slice(-4, -2));\n    let hours = Number(timeString.slice(0, -4));\n    setTime({\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds\n    });\n\n    //console.log({hours: hours, minutes: minutes, seconds: seconds});\n\n    let formattedText = \"\";\n    for (var i = numericalString.length - 1; i >= 0; i--) {\n      if (i < numericalString.length - 1 && (numericalString.length - i) % 2 == 1) {\n        if (numericalString.length - i < 6) {\n          formattedText = \":\" + formattedText;\n        }\n      }\n      formattedText = numericalString[i] + formattedText;\n    }\n    setTimeText(formattedText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: styles.timeField,\n      value: timeText,\n      onChange: e => handleOnChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      className: styles.inputField,\n      onChange: e => setDistance(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: () => setCalculatedPace(GetPace(time, distance, 0, 0)),\n      children: \"Get Pace\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(Calculator, \"lq6DT9OHrBegzV6MgM2zVzf2epQ=\");\n_c = Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","Calculator","_s","time","setTime","timeText","setTimeText","distance","setDistance","calculatedPace","setCalculatedPace","GetPace","distanceTraveled","unit","unitToConvert","timeInSeconds","hours","minutes","seconds","secondsPer","Math","floor","handleOnChange","e","numericalString","target","value","replaceAll","timeString","padStart","Number","slice","formattedText","i","length","className","container","children","timeField","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","inputField","button","onClick","_c","$RefreshReg$"],"sources":["/Users/alexyoung/Documents/React/pace-calculator/src/containers/Calculator.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from '../styles.module.css'\n\nexport default function Calculator(){\n\n    const [time, setTime] = useState({\"hours\": 0, \"minutes\": 0, \"seconds\": 0});\n    const [timeText, setTimeText] = useState(\"\");\n    const [distance, setDistance] = useState(0);\n    const [calculatedPace, setCalculatedPace] = useState({\"hours\": 0, \"minutes\": 0, \"seconds\": 0});\n\n    function GetPace(time, distanceTraveled, unit, unitToConvert){\n        let timeInSeconds = time.hours * 3600 + time.minutes * 60 + time.seconds;\n        let secondsPer = timeInSeconds / distanceTraveled;\n\n        let hours = Math.floor(secondsPer / 3600);\n        let minutes = Math.floor((secondsPer - hours * 3600) / 60);\n        let seconds = secondsPer - hours * 3600 - minutes * 60;\n\n        return {\"hours\": hours, \"minutes\": minutes, \"seconds\": seconds};\n    }\n\n    const handleOnChange = (e) => {\n        let numericalString = e.target.value.replaceAll(\":\", \"\");\n\n        let timeString = numericalString.padStart(5, '0')\n\n        let seconds = Number(timeString.slice(-2));\n        let minutes = Number(timeString.slice(-4, -2));\n        let hours = Number(timeString.slice(0, -4));\n        setTime({hours: hours, minutes: minutes, seconds: seconds});\n\n        //console.log({hours: hours, minutes: minutes, seconds: seconds});\n\n        let formattedText = \"\"\n        \n        for(var i = numericalString.length - 1; i >= 0; i--){\n            if(i < numericalString.length - 1 && (numericalString.length - i) % 2 == 1){\n                if(numericalString.length - i < 6) {\n                    formattedText = \":\" + formattedText;\n                }\n            }\n            formattedText = numericalString[i] + formattedText;\n        }\n        \n        setTimeText(formattedText)\n    }\n\n    return(\n        <div className={styles.container}>\n            <input className={styles.timeField} value={timeText} onChange={e => handleOnChange(e)}></input>\n            <input type=\"number\" className={styles.inputField} onChange={e => setDistance(e.target.value)}></input>\n            <button className={styles.button} onClick={() => setCalculatedPace(GetPace(time, distance, 0, 0))}>Get Pace</button>\n        </div>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}